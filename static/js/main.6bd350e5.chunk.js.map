{"version":3,"sources":["components/ThreeJSGameContainer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ThreeJSGameContainer","useEffect","renderer","THREE","setSize","window","innerWidth","innerHeight","document","body","appendChild","domElement","camera","position","z","scene","geometry","material","color","emissive","side","flatShading","cube","add","light","set","animate","requestAnimationFrame","rotation","x","y","render","style","margin","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"qKAQaA,EAAyC,WAgDlD,OA9CAC,qBAAU,WAIN,IAAIC,EAAW,IAAIC,IACnBD,EAASE,QAASC,OAAOC,WAAYD,OAAOE,aAC5CC,SAASC,KAAKC,YAAaR,EAASS,YAGpC,IAAIC,EAAS,IAAIT,IAAyB,GAAIE,OAAOC,WAAWD,OAAOE,YAAa,GAAK,KACzFK,EAAOC,SAASC,EAAI,EAEpB,IAAIC,EAAQ,IAAIZ,IAGZa,EAAW,IAAIb,IAAmB,EAAG,IAAK,KAC1Cc,EAAW,IAAId,IAAyB,CACxCe,MAAO,QACPC,SAAU,OACVC,KAAMjB,IACNkB,aAAa,IAEbC,EAAO,IAAInB,IAAYa,EAAUC,GACrCF,EAAMQ,IAAKD,GAIX,IACIE,EAAQ,IAAIrB,IAAuB,SADnB,GAEpBqB,EAAMX,SAASY,KAAK,EAAG,EAAG,GAC1BV,EAAMQ,IAAKC,IAKG,SAAVE,IACAC,sBAAuBD,GACvBJ,EAAKM,SAASC,GAAK,IACnBP,EAAKM,SAASE,GAAK,IACnB5B,EAAS6B,OAAQhB,EAAOH,GAG5Bc,MAKA,qBAAKM,MAAO,CAACC,OAAQ,a,eC9BdC,MAtBf,WACE,OACE,qCACE,2BAGA,+BACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAZ,SACE,cAAC,EAAD,YAKR,+BCNSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASd,OACP,cAAC,IAAMe,WAAP,UACE,cAAC,EAAD,MAEFtC,SAASuC,eAAe,SAM1BX,M","file":"static/js/main.6bd350e5.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport * as THREE from \"three\";\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\nexport const ThreeJSGameContainer: React.FC<IProps> = () => {\r\n\r\n    useEffect(() => {\r\n        // === THREE.JS CODE START ===\r\n        \r\n        // Renderer setup\r\n        let renderer = new THREE.WebGLRenderer();\r\n        renderer.setSize( window.innerWidth, window.innerHeight );\r\n        document.body.appendChild( renderer.domElement );\r\n\r\n        // Camera setup\r\n        let camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );\r\n        camera.position.z = 5;\r\n\r\n        let scene = new THREE.Scene();\r\n\r\n        // Cube setup\r\n        let geometry = new THREE.BoxGeometry( 2, 1.5, 1.5 );\r\n        let material = new THREE.MeshPhongMaterial( { \r\n            color: 0x156289,\r\n            emissive: 0x072534,\r\n            side: THREE.DoubleSide,\r\n            flatShading: true\r\n         } );\r\n        let cube = new THREE.Mesh( geometry, material );\r\n        scene.add( cube );\r\n        \r\n        \r\n        // Light setup\r\n        let lightIntesity = 1;\r\n        let light = new THREE.DirectionalLight(0xFFFFFF, lightIntesity);\r\n        light.position.set(-1, 2, 4);\r\n        scene.add( light );\r\n\r\n        // Input setup\r\n\r\n\r\n        let animate = () => {\r\n            requestAnimationFrame( animate );\r\n            cube.rotation.x += 0.02;\r\n            cube.rotation.y += 0.01;\r\n            renderer.render( scene, camera );\r\n        };\r\n        \r\n        animate();\r\n        // === THREE.JS EXAMPLE CODE END ===\r\n    });\r\n\r\n    return (\r\n        <div style={{margin: \"0 auto\"}}>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport { ThreeJSGameContainer } from '../src/components/ThreeJSGameContainer';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <>\n      <header>\n\n      </header>\n      <body>\n        <BrowserRouter>\n          <Switch>\n            <Route path='/'>\n              <ThreeJSGameContainer />\n            </Route>\n          </Switch>  \n        </BrowserRouter>\n      </body>\n      <footer>\n\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}